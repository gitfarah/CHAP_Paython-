1) check if user & password true
2) if ture call random_string generator then password + random_string
3) hashValue = hash(password + random_string)
4) call server method hashCompare(username,hashValeu) to authenticate user 
5) in step 4) server will compare his know user's password + random_string with the hashValue from client



# upcomming operations:


'''
#Methoden

login():
  input()

startAuthenticate:
  rand = s.startauthenticate()

hash:
  hashwert = password+rand

Authenticate:
  print = s.authenticate(Username,hashwert)

#server

#Variablen

User1 ="name"
user1PW = "pass1234"
rand

#methoden
startauthenticate:
  rand = random(1,2)
  return rand

authenticate(username, hashwert):
  for user in users:
    if hash(user1pw + rand) == hashwert
    return "success"

    else:
      return "failed"
      sys.exit(0)

'''




#failed operations:


# Create serverHasher()
def serverHasher():
		password = 'Pass123':
		hash = password + genRandnumber()
		hashlib.sha256(hash.encode('utf-8'))
		return hash.hexdigest()
#server.register_function(hasher)

# Create clientHasher()
def clientHasher(password):
	if password == 'Pass123':
		hash = password + genRandnumber()
		hashlib.sha256(hash.encode('utf-8'))
		return hash.hexdigest()
#server.register_function(serverHasher)
'''

# Notes for hashCompare
'''
def hashCompare():
    while (true):
	if serverHasher() == clientHasher():
		return "you're logged in"
		break
	elif serverHasher() != clientHasher():
		return "loggin failed, plz repeat"
	elif serverHasher() != clientHasher():
		return "loggin failed, plz repeat"
	elif serverHasher() != clientHasher():
		return "loggin failed, plz repeat"
	else:
		sys.exit(0)
		
'''